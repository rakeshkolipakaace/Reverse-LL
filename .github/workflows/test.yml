name: DSA Solutions Test Runner

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check-solutions:
    runs-on: ubuntu-latest
    outputs:
      run-c: ${{ steps.check-files.outputs.run-c }}
      run-cpp: ${{ steps.check-files.outputs.run-cpp }}
      run-java: ${{ steps.check-files.outputs.run-java }}
      run-python: ${{ steps.check-files.outputs.run-python }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Check solution files
        id: check-files
        run: |
          echo "Checking for non-empty solution files:"
          run_c=$([ -s "solution.c" ] && echo "true" || echo "false")
          run_cpp=$([ -s "solution.cpp" ] && echo "true" || echo "false")
          run_java=$([ -s "Solution.java" ] && echo "true" || echo "false")
          run_python=$([ -s "solution.py" ] && echo "true" || echo "false")

          echo "C: $run_c, C++: $run_cpp, Java: $run_java, Python: $run_python"
          
          echo "run-c=$run_c" >> $GITHUB_OUTPUT
          echo "run-cpp=$run_cpp" >> $GITHUB_OUTPUT
          echo "run-java=$run_java" >> $GITHUB_OUTPUT
          echo "run-python=$run_python" >> $GITHUB_OUTPUT

  run-tests:
    needs: check-solutions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [c, cpp, java, python]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up environment for ${{ matrix.language }}
        if: ${{ needs.check-solutions.outputs.run-${{ matrix.language }} == 'true' }}
        run: |
          case "${{ matrix.language }}" in
            c|cpp)
              sudo apt-get update && sudo apt-get install -y gcc g++
              ;;
            java)
              sudo apt-get install -y openjdk-17-jdk
              ;;
            python)
              python -m pip install pytest
              ;;
          esac

      - name: Run ${{ matrix.language }} tests
        if: ${{ needs.check-solutions.outputs.run-${{ matrix.language }} == 'true' }}
        run: |
          echo "=== STARTING ${{ matrix.language | upcase }} TESTS ==="
          case "${{ matrix.language }}" in
            c)
              gcc solution.c test.c -o test_program
              ./test_program
              ;;
            cpp)
              g++ solution.cpp test.cpp -o test_program
              ./test_program
              ;;
            java)
              javac Solution.java Test.java
              java Test
              ;;
            python)
              pytest tests/test_solution.py -v
              ;;
          esac
          echo "=== ${{ matrix.language | upcase }} TESTS COMPLETED ==="